head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2022.02.07.01.33.46;	author -;	state -;
branches;
next	1.5;

1.5
date	2022.02.07.01.32.25;	author -;	state -;
branches;
next	1.4;

1.4
date	2022.02.03.18.42.20;	author -;	state -;
branches;
next	1.3;

1.3
date	2022.02.03.18.41.15;	author -;	state -;
branches;
next	1.2;

1.2
date	2022.02.03.18.40.35;	author -;	state -;
branches;
next	1.1;

1.1
date	2022.02.02.04.59.00;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: test-xless.cpp,v 1.5 2022-02-06 17:32:25-08 - - $

// Example of how to use xless object on a pair of strings.

#include <iomanip>
#include <iostream>
#include <string>

using namespace std;

template <typename Type>
struct xless {
   bool operator() (const Type &left, const Type &right) const {
      return left < right;
   }
};

template <typename Type>
struct xgreater {
   bool operator() (const Type &left, const Type &right) const {
      return left > right;
   }
};

template <typename Type, class Less=xless<Type>>
void compare (const Type &left, const Type &right) {
   Less less;
   cout << boolalpha;
   bool is_less = less (left, right);
   bool is_greater = less (right, left);
   bool is_equal = not is_less and not is_greater;
   cout << endl;
   cout << __PRETTY_FUNCTION__ << endl;
   cout << " (" << left << ", " << right << "):" << endl;
   cout << "is_less = " << is_less << endl;
   cout << "is_greater = " << is_greater << endl;
   cout << "is_equal = " << is_equal << endl;
}

int main () {
   compare (string ("hello"), string ("world"));
   compare (string ("qwert"), string ("qwert"));
   compare (string ("zxcvb"), string ("asdfg"));
   compare<string,xgreater<string>> ("hello", "world");
   compare<string,xgreater<string>> ("qwert", "qwert");
   compare<string,xgreater<string>> ("zxcvb", "asdfg");
   return 0;
}

//TEST// testxless >testxless.out 2>&1
//TEST// mkpspdf testxless.ps testxless.cpp* testxless.out

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: test-xless.cpp,v 1.4 2022-02-03 10:42:20-08 - - $
d44 3
a46 3
   compare<string,xgreater> ("hello", "world");
   compare<string,xgreater> ("qwert", "qwert");
   compare<string,xgreater> ("zxcvb", "asdfg");
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: test-xless.cpp,v 1.3 2022-02-03 10:41:15-08 - - $
d18 7
d44 3
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: test-xless.cpp,v 1.2 2022-02-03 10:40:35-08 - - $
d25 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: test-xless.cpp,v 1.1 2022-02-01 20:59:00-08 - - $
d25 2
a26 2
   cout << __PRETTY_FUNCTION__ << " (" << left << ", "
        << right << "):" << endl;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: test-xless.cpp,v 1.1 2021-10-26 22:13:33-07 - - $
d25 5
a29 4
   cout << left << " <  " << right << " = " << is_less << endl;
   cout << left << " == " << right << " = " << is_equal << endl;
   cout << left << " >  " << right << " = " << is_greater << endl;
   cout << endl;
@
