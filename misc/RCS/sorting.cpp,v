head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2022.02.07.02.29.10;	author -;	state -;
branches;
next	1.5;

1.5
date	2022.02.07.02.27.37;	author -;	state -;
branches;
next	1.4;

1.4
date	2022.02.07.02.25.28;	author -;	state -;
branches;
next	1.3;

1.3
date	2022.02.07.01.58.17;	author -;	state -;
branches;
next	1.2;

1.2
date	2022.02.07.01.58.00;	author -;	state -;
branches;
next	1.1;

1.1
date	2022.02.07.01.56.45;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: sorting.cpp,v 1.4 2022-02-06 18:25:28-08 - - $

// Example of how to use xless object on a pair of strings.

#include <iomanip>
#include <iostream>
#include <string>
#include <vector>
using namespace std;

struct name {
   string first;
   string last;
};
bool operator< (const name& one, const name& two) {
   if (one.last < two.last) return true;
   if (one.last > two.last) return false;
   return one.first < two.first;
}
ostream& operator<< (ostream& out, const name& who) {
   return out << who.first << " " << who.last;
}

template <typename Type>
struct xless {
   bool operator() (const Type &left, const Type &right) const {
      return left < right;
   }
};

template <typename Type>
struct xgreater {
   bool operator() (const Type &left, const Type &right) const {
      return left > right;
   }
};

template <typename Type>
void print (const Type& cont) {
   for (const auto& i: cont) cout << " " << i;
   cout << endl;
}

vector<string> vs {"hello", "world", "foo", "bar", "baz"};
vector<int> vi {3, 1, 4, 55, 77, -8};

vector<name> vn {{"John","Doe"},
                 {"Mary","Roe"},
                 {"Jim","Roe"},
                 {"John","Roe"},
                 {"Jane","Doe"}};

int main () {
   sort (vs.begin(), vs.end());
   print (vs);
   sort (vs.begin(), vs.end(), xgreater<string>());
   print (vs);
   sort (vi.begin(), vi.end(), xgreater<int>());
   print (vi);
   sort (vi.begin(), vi.end(), xless<int>());
   print (vi);
   sort (vn.begin(), vn.end(), xless<name>());
   print (vn);
}

//TEST// testxless >testxless.out 2>&1
//TEST// mkpspdf testxless.ps testxless.cpp* testxless.out

@


1.5
log
@-
@
text
@d20 3
d40 1
a40 1
   for (const auto& i:cont) cout << " " << i;
d63 1
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: sorting.cpp,v 1.3 2022-02-06 17:58:17-08 - - $
d11 10
a39 10

struct name {
   string first;
   string last;
   bool operator< (const name& that) {
      if (last < that.last) return true;
      if (last > that.last) return false;
      return first < that.first;
   }
};
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: sorting.cpp,v 1.2 2022-02-06 17:58:00-08 - - $
d31 10
d44 6
d59 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: sorting.cpp,v 1.1 2022-02-06 17:56:45-08 - - $
d40 1
a40 1
   print (vs);
d42 1
a42 1
   print (vs);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: test-xless.cpp,v 1.6 2022-02-06 17:33:46-08 - - $
d32 1
d38 4
@
